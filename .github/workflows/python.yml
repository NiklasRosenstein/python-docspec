# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ develop ]
    tags: [ '*' ]
  pull_request:
    branches: [ develop ]

jobs:

  install-tooling:
    runs-on: ubuntu-latest
    steps:

    - name: Cache tooling environment
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          /opt/pipx
          /opt/pipx_bin
          /opt/hostedtoolcache/pyenv_root
        # NOTE: Same as pyenv config
        key: 3.10.2 pip install -U pip && pip install pipx -q && which pip && which pipx && pipx install poetry && pipx install slam-cli==1.0.0a9

    - uses: gabrielfalcao/pyenv-action@v9
      if: steps.cache.outputs.cache-hit != 'true'
      with:
        default: 3.10.2
        command: pip install -U pip && pip install pipx -q && which pip && which pipx && pipx install poetry && pipx install slam-cli==1.0.0a9

    - name: Test tooling
      run: |
        poetry --version
        slam --version
        which poetry
        which slam
        which pipx
        which python
        pyenv which pip
        pyenv local 3.10.2
        pyenv which pip
        pyenv which python

        echo
        echo ls ~/
        ls ~/

        echo
        echo ls /opt
        ls ~/opt

        echo
        echo ls /hostedtoolcache
        ls ~/hostedtoolcache

    - name: Cache tooling environment
      uses: actions/upload-artifact@v2
      with:
        name: tooling
        path: |
          /opt/pipx_bin
          /opt/pipx
          /hostedtoolcache/pyenv_root

  test:
    needs: install-tooling
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7.12', '3.8.12', '3.9.10', '3.10.2']
        project: ['docspec', 'docspec-python']
    steps:

    - name: Materialize tooling environment
      uses: actions/download-artifact@v2
      with:
        name: tooling

    - name: Test tooling environment
      run: |
        poetry --version
        slam --version

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: gabrielfalcao/pyenv-action@v9
      with:
        default: "${{ matrix.python-version }}"
        versions: 3.10.2
        command: pip install -U pip

    - name: Install ${{ matrix.project }}
      run: |
        pyenv local "${{ matrix.python-version }}"
        which pip
        pyenv which pip
        pip install ./docspec
        pushd "${{ matrix.project }}" && poetry install --no-root --E dev && popd

    - name: Slam test
      run: slam test

  update-pr-numbers:
    if: github.event_name == 'pull_request'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install Slam
      run: pip install slam-cli==1.0.0a9
    - name: Update PR references in changelogs
      run: slam -vv changelog update-pr --use github-actions

  # documentation:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.9'
  #   - name: Install dependencies
  #     run: python -m pip install shut==0.21.0 pydoc-markdown==4.2.0 mkdocs mako -q
  #   - name: Generate docs
  #     run: pydoc-markdown --build --site-dir "$PWD/_html"
  #   - name: Store Html
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: docs
  #       path: _html
  #   - name: Publish docs
  #     uses: JamesIves/github-pages-deploy-action@4.1.4
  #     if: github.ref == 'refs/heads/develop'
  #     with:
  #       branch: gh-pages
  #       folder: _html
  #       ssh-key: ${{ secrets.DEPLOY_KEY }}

  # publish:
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.8
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.8
  #   - name: Install dependencies
  #     run: pip install -q shut==0.21.0 -q
  #   - name: Shut publish
  #     env:
  #       PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
  #       TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
  #     run: |
  #       shut mono update --verify-tag "$GITHUB_REF"
  #       shut mono publish warehouse:pypi --test
  #       shut mono publish warehouse:pypi
