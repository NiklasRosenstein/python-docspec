# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ develop ]
    tags: [ '*' ]
  pull_request:
    branches: [ develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.x']
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install shut==0.21.0 -q
    - name: Test
      run: TEST_NO_DEVELOP=true shut mono test --isolate
    - name: Verify package metadata
      run: shut mono update --verify

  documentation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: python -m pip install shut==0.21.0 pydoc-markdown==4.2.0 mkdocs mako -q
    - name: Generate docs
      run: pydoc-markdown --build --site-dir "$PWD/_html"
    - name: Store Html
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: _html
    - name: Publish docs
      uses: JamesIves/github-pages-deploy-action@4.1.4
      if: github.ref == 'refs/heads/develop'
      with:
        branch: gh-pages
        folder: _html
        ssh-key: ${{ secrets.DEPLOY_KEY }}

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: pip install -q shut==0.21.0 -q
    - name: Shut publish
      env:
        PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
      run: |
        shut mono update --verify-tag "$GITHUB_REF"
        shut mono publish warehouse:pypi --test
        shut mono publish warehouse:pypi
